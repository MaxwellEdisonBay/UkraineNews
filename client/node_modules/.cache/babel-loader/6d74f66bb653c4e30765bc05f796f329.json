{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // Hook\n\nconst useWindowSize = () => {\n  _s();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // only execute all the code below in client side\n    if (typeof window !== \"undefined\") {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      } // Add event listener\n\n\n      window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n      handleResize(); // Remove event listener on cleanup\n\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n};\n\n_s(useWindowSize, \"WMqaMVAPr0u8CJVTsAIdEuYrbbM=\");\n\nexport default useWindowSize;","map":{"version":3,"names":["useState","useEffect","useWindowSize","windowSize","setWindowSize","width","undefined","height","window","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener"],"sources":["/home/ivan/VScode/news/client/src/hooks/useWidowSize.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\n// Hook\nconst useWindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // only execute all the code below in client side\n    if (typeof window !== \"undefined\") {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n\n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n\n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n\n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n};\n\nexport default useWindowSize;\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B;EACA;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC;IAC3CK,KAAK,EAAEC,SADoC;IAE3CC,MAAM,EAAED;EAFmC,CAAD,CAA5C;EAKAL,SAAS,CAAC,MAAM;IACd;IACA,IAAI,OAAOO,MAAP,KAAkB,WAAtB,EAAmC;MACjC;MACA,SAASC,YAAT,GAAwB;QACtB;QACAL,aAAa,CAAC;UACZC,KAAK,EAAEG,MAAM,CAACE,UADF;UAEZH,MAAM,EAAEC,MAAM,CAACG;QAFH,CAAD,CAAb;MAID,CARgC,CAUjC;;;MACAH,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC,EAXiC,CAajC;;MACAA,YAAY,GAdqB,CAgBjC;;MACA,OAAO,MAAMD,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCJ,YAArC,CAAb;IACD;EACF,CArBQ,EAqBN,EArBM,CAAT,CAR0B,CA6BlB;;EACR,OAAON,UAAP;AACD,CA/BD;;GAAMD,a;;AAiCN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}