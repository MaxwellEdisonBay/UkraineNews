{"ast":null,"code":"import React from 'react';\nimport { Alignment } from './types';\n\nvar getSliderListWidth = function getSliderListWidth(count, slidesToShow, wrapAround) {\n  var visibleSlides = slidesToShow || 1;\n\n  if (wrapAround) {\n    var _percentage = count * 100 / visibleSlides;\n\n    return \"\".concat(3 * _percentage, \"%\");\n  }\n\n  var percentage = count * 100 / visibleSlides;\n  return \"\".concat(percentage, \"%\");\n};\n\nvar getTransition = function getTransition(count, initialValue, currentSlide, cellAlign, wrapAround) {\n  if (cellAlign === Alignment.Left) {\n    if (wrapAround) {\n      var _slideTransition = 100 / (3 * count);\n\n      var currentTransition = initialValue - _slideTransition * (currentSlide - 1);\n      return currentTransition - _slideTransition;\n    }\n\n    var slideTransition = 100 / count * currentSlide;\n    return -(slideTransition + initialValue);\n  } else if (cellAlign === Alignment.Center) {\n    if (wrapAround) {\n      var _slideTransition3 = 100 / (3 * count);\n\n      var _currentTransition = initialValue - _slideTransition3 * (currentSlide - 1);\n\n      return _currentTransition - _slideTransition3;\n    }\n\n    var _slideTransition2 = 100 / count * currentSlide;\n\n    return initialValue - _slideTransition2;\n  } else if (cellAlign === Alignment.Right) {\n    if (wrapAround) {\n      var _slideTransition5 = 100 / (3 * count);\n\n      var _currentTransition2 = initialValue - _slideTransition5 * (currentSlide - 1);\n\n      return _currentTransition2 - _slideTransition5;\n    }\n\n    var _slideTransition4 = 100 / count * currentSlide;\n\n    return initialValue - _slideTransition4;\n  }\n\n  return initialValue;\n}; // eslint-disable-next-line complexity\n\n\nvar getPositioning = function getPositioning(cellAlign, slidesToShow, count, currentSlide, wrapAround, move) {\n  if (!cellAlign || cellAlign === Alignment.Left) {\n    var initialValue = wrapAround ? -(count * (100 / (3 * count))) : 0;\n    var horizontalMove = getTransition(count, initialValue, currentSlide, cellAlign, wrapAround);\n    var draggableMove = move ? \"calc(\".concat(horizontalMove, \"% - \").concat(move, \"px)\") : \"\".concat(horizontalMove, \"%\");\n    return \"translate3d(\".concat(draggableMove, \", 0, 0)\");\n  }\n\n  if (cellAlign === Alignment.Right) {\n    var right = slidesToShow > 1 ? 100 / count * (slidesToShow - 1) : 0; // if wrapAround is enabled\n\n    var rightAlignedFirstSlide = -(count * (100 / (3 * count))) + (slidesToShow - 1) * (100 / (3 * count));\n\n    var _initialValue = wrapAround ? rightAlignedFirstSlide : right;\n\n    var _horizontalMove = getTransition(count, _initialValue, currentSlide, cellAlign, wrapAround);\n\n    var _draggableMove = move ? \"calc(\".concat(_horizontalMove, \"% - \").concat(move, \"px)\") : \"\".concat(_horizontalMove, \"%\");\n\n    return \"translate3d(\".concat(_draggableMove, \", 0, 0)\");\n  }\n\n  if (cellAlign === Alignment.Center) {\n    var center = slidesToShow > 1 ? 100 / count * Math.floor(slidesToShow / 2) : 0;\n    var validatedCenter = slidesToShow % 2 === 0 ? center - 100 / count / 2 : center; // if wrapAround is enabled\n\n    var centerAlignedFirstSlide = -(count * (100 / (3 * count))) + Math.floor(slidesToShow / 2) * (100 / (3 * count));\n    var wrapAroundCenter = slidesToShow % 2 === 0 ? centerAlignedFirstSlide - 100 / (3 * count) / 2 : centerAlignedFirstSlide;\n\n    var _initialValue2 = wrapAround ? wrapAroundCenter : validatedCenter;\n\n    var _horizontalMove2 = getTransition(count, _initialValue2, currentSlide, cellAlign, wrapAround);\n\n    var _draggableMove2 = move ? \"calc(\".concat(_horizontalMove2, \"% - \").concat(move, \"px)\") : \"\".concat(_horizontalMove2, \"%\");\n\n    return \"translate3d(\".concat(_draggableMove2, \", 0, 0)\");\n  }\n\n  return 'translate3d(0, 0, 0)';\n};\n\nexport var getSliderListStyles = function getSliderListStyles(children, currentSlide, animation, slidesToShow, cellAlign, wrapAround, speed, move, slideAnimation) {\n  var count = React.Children.count(children);\n  var width = getSliderListWidth(count, slidesToShow, wrapAround);\n  var positioning = getPositioning(cellAlign || Alignment.Left, slidesToShow || 1, count, currentSlide, wrapAround, move);\n  return {\n    width: width,\n    textAlign: 'left',\n    transition: animation && slideAnimation !== 'fade' ? \"\".concat(speed || 500, \"ms ease 0s\") : 'none',\n    transform: positioning,\n    display: 'flex'\n  };\n};","map":{"version":3,"names":["React","Alignment","getSliderListWidth","count","slidesToShow","wrapAround","visibleSlides","_percentage","concat","percentage","getTransition","initialValue","currentSlide","cellAlign","Left","_slideTransition","currentTransition","slideTransition","Center","_slideTransition3","_currentTransition","_slideTransition2","Right","_slideTransition5","_currentTransition2","_slideTransition4","getPositioning","move","horizontalMove","draggableMove","right","rightAlignedFirstSlide","_initialValue","_horizontalMove","_draggableMove","center","Math","floor","validatedCenter","centerAlignedFirstSlide","wrapAroundCenter","_initialValue2","_horizontalMove2","_draggableMove2","getSliderListStyles","children","animation","speed","slideAnimation","Children","width","positioning","textAlign","transition","transform","display"],"sources":["/home/ivan/VScode/news/client/node_modules/nuka-carousel/es-v5/slider-list.js"],"sourcesContent":["import React from 'react';\nimport { Alignment } from './types';\n\nvar getSliderListWidth = function getSliderListWidth(count, slidesToShow, wrapAround) {\n  var visibleSlides = slidesToShow || 1;\n\n  if (wrapAround) {\n    var _percentage = count * 100 / visibleSlides;\n\n    return \"\".concat(3 * _percentage, \"%\");\n  }\n\n  var percentage = count * 100 / visibleSlides;\n  return \"\".concat(percentage, \"%\");\n};\n\nvar getTransition = function getTransition(count, initialValue, currentSlide, cellAlign, wrapAround) {\n  if (cellAlign === Alignment.Left) {\n    if (wrapAround) {\n      var _slideTransition = 100 / (3 * count);\n\n      var currentTransition = initialValue - _slideTransition * (currentSlide - 1);\n      return currentTransition - _slideTransition;\n    }\n\n    var slideTransition = 100 / count * currentSlide;\n    return -(slideTransition + initialValue);\n  } else if (cellAlign === Alignment.Center) {\n    if (wrapAround) {\n      var _slideTransition3 = 100 / (3 * count);\n\n      var _currentTransition = initialValue - _slideTransition3 * (currentSlide - 1);\n\n      return _currentTransition - _slideTransition3;\n    }\n\n    var _slideTransition2 = 100 / count * currentSlide;\n\n    return initialValue - _slideTransition2;\n  } else if (cellAlign === Alignment.Right) {\n    if (wrapAround) {\n      var _slideTransition5 = 100 / (3 * count);\n\n      var _currentTransition2 = initialValue - _slideTransition5 * (currentSlide - 1);\n\n      return _currentTransition2 - _slideTransition5;\n    }\n\n    var _slideTransition4 = 100 / count * currentSlide;\n\n    return initialValue - _slideTransition4;\n  }\n\n  return initialValue;\n}; // eslint-disable-next-line complexity\n\n\nvar getPositioning = function getPositioning(cellAlign, slidesToShow, count, currentSlide, wrapAround, move) {\n  if (!cellAlign || cellAlign === Alignment.Left) {\n    var initialValue = wrapAround ? -(count * (100 / (3 * count))) : 0;\n    var horizontalMove = getTransition(count, initialValue, currentSlide, cellAlign, wrapAround);\n    var draggableMove = move ? \"calc(\".concat(horizontalMove, \"% - \").concat(move, \"px)\") : \"\".concat(horizontalMove, \"%\");\n    return \"translate3d(\".concat(draggableMove, \", 0, 0)\");\n  }\n\n  if (cellAlign === Alignment.Right) {\n    var right = slidesToShow > 1 ? 100 / count * (slidesToShow - 1) : 0; // if wrapAround is enabled\n\n    var rightAlignedFirstSlide = -(count * (100 / (3 * count))) + (slidesToShow - 1) * (100 / (3 * count));\n\n    var _initialValue = wrapAround ? rightAlignedFirstSlide : right;\n\n    var _horizontalMove = getTransition(count, _initialValue, currentSlide, cellAlign, wrapAround);\n\n    var _draggableMove = move ? \"calc(\".concat(_horizontalMove, \"% - \").concat(move, \"px)\") : \"\".concat(_horizontalMove, \"%\");\n\n    return \"translate3d(\".concat(_draggableMove, \", 0, 0)\");\n  }\n\n  if (cellAlign === Alignment.Center) {\n    var center = slidesToShow > 1 ? 100 / count * Math.floor(slidesToShow / 2) : 0;\n    var validatedCenter = slidesToShow % 2 === 0 ? center - 100 / count / 2 : center; // if wrapAround is enabled\n\n    var centerAlignedFirstSlide = -(count * (100 / (3 * count))) + Math.floor(slidesToShow / 2) * (100 / (3 * count));\n    var wrapAroundCenter = slidesToShow % 2 === 0 ? centerAlignedFirstSlide - 100 / (3 * count) / 2 : centerAlignedFirstSlide;\n\n    var _initialValue2 = wrapAround ? wrapAroundCenter : validatedCenter;\n\n    var _horizontalMove2 = getTransition(count, _initialValue2, currentSlide, cellAlign, wrapAround);\n\n    var _draggableMove2 = move ? \"calc(\".concat(_horizontalMove2, \"% - \").concat(move, \"px)\") : \"\".concat(_horizontalMove2, \"%\");\n\n    return \"translate3d(\".concat(_draggableMove2, \", 0, 0)\");\n  }\n\n  return 'translate3d(0, 0, 0)';\n};\n\nexport var getSliderListStyles = function getSliderListStyles(children, currentSlide, animation, slidesToShow, cellAlign, wrapAround, speed, move, slideAnimation) {\n  var count = React.Children.count(children);\n  var width = getSliderListWidth(count, slidesToShow, wrapAround);\n  var positioning = getPositioning(cellAlign || Alignment.Left, slidesToShow || 1, count, currentSlide, wrapAround, move);\n  return {\n    width: width,\n    textAlign: 'left',\n    transition: animation && slideAnimation !== 'fade' ? \"\".concat(speed || 500, \"ms ease 0s\") : 'none',\n    transform: positioning,\n    display: 'flex'\n  };\n};"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,SAA1B;;AAEA,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,KAA5B,EAAmCC,YAAnC,EAAiDC,UAAjD,EAA6D;EACpF,IAAIC,aAAa,GAAGF,YAAY,IAAI,CAApC;;EAEA,IAAIC,UAAJ,EAAgB;IACd,IAAIE,WAAW,GAAGJ,KAAK,GAAG,GAAR,GAAcG,aAAhC;;IAEA,OAAO,GAAGE,MAAH,CAAU,IAAID,WAAd,EAA2B,GAA3B,CAAP;EACD;;EAED,IAAIE,UAAU,GAAGN,KAAK,GAAG,GAAR,GAAcG,aAA/B;EACA,OAAO,GAAGE,MAAH,CAAUC,UAAV,EAAsB,GAAtB,CAAP;AACD,CAXD;;AAaA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBP,KAAvB,EAA8BQ,YAA9B,EAA4CC,YAA5C,EAA0DC,SAA1D,EAAqER,UAArE,EAAiF;EACnG,IAAIQ,SAAS,KAAKZ,SAAS,CAACa,IAA5B,EAAkC;IAChC,IAAIT,UAAJ,EAAgB;MACd,IAAIU,gBAAgB,GAAG,OAAO,IAAIZ,KAAX,CAAvB;;MAEA,IAAIa,iBAAiB,GAAGL,YAAY,GAAGI,gBAAgB,IAAIH,YAAY,GAAG,CAAnB,CAAvD;MACA,OAAOI,iBAAiB,GAAGD,gBAA3B;IACD;;IAED,IAAIE,eAAe,GAAG,MAAMd,KAAN,GAAcS,YAApC;IACA,OAAO,EAAEK,eAAe,GAAGN,YAApB,CAAP;EACD,CAVD,MAUO,IAAIE,SAAS,KAAKZ,SAAS,CAACiB,MAA5B,EAAoC;IACzC,IAAIb,UAAJ,EAAgB;MACd,IAAIc,iBAAiB,GAAG,OAAO,IAAIhB,KAAX,CAAxB;;MAEA,IAAIiB,kBAAkB,GAAGT,YAAY,GAAGQ,iBAAiB,IAAIP,YAAY,GAAG,CAAnB,CAAzD;;MAEA,OAAOQ,kBAAkB,GAAGD,iBAA5B;IACD;;IAED,IAAIE,iBAAiB,GAAG,MAAMlB,KAAN,GAAcS,YAAtC;;IAEA,OAAOD,YAAY,GAAGU,iBAAtB;EACD,CAZM,MAYA,IAAIR,SAAS,KAAKZ,SAAS,CAACqB,KAA5B,EAAmC;IACxC,IAAIjB,UAAJ,EAAgB;MACd,IAAIkB,iBAAiB,GAAG,OAAO,IAAIpB,KAAX,CAAxB;;MAEA,IAAIqB,mBAAmB,GAAGb,YAAY,GAAGY,iBAAiB,IAAIX,YAAY,GAAG,CAAnB,CAA1D;;MAEA,OAAOY,mBAAmB,GAAGD,iBAA7B;IACD;;IAED,IAAIE,iBAAiB,GAAG,MAAMtB,KAAN,GAAcS,YAAtC;;IAEA,OAAOD,YAAY,GAAGc,iBAAtB;EACD;;EAED,OAAOd,YAAP;AACD,CAtCD,C,CAsCG;;;AAGH,IAAIe,cAAc,GAAG,SAASA,cAAT,CAAwBb,SAAxB,EAAmCT,YAAnC,EAAiDD,KAAjD,EAAwDS,YAAxD,EAAsEP,UAAtE,EAAkFsB,IAAlF,EAAwF;EAC3G,IAAI,CAACd,SAAD,IAAcA,SAAS,KAAKZ,SAAS,CAACa,IAA1C,EAAgD;IAC9C,IAAIH,YAAY,GAAGN,UAAU,GAAG,EAAEF,KAAK,IAAI,OAAO,IAAIA,KAAX,CAAJ,CAAP,CAAH,GAAoC,CAAjE;IACA,IAAIyB,cAAc,GAAGlB,aAAa,CAACP,KAAD,EAAQQ,YAAR,EAAsBC,YAAtB,EAAoCC,SAApC,EAA+CR,UAA/C,CAAlC;IACA,IAAIwB,aAAa,GAAGF,IAAI,GAAG,QAAQnB,MAAR,CAAeoB,cAAf,EAA+B,MAA/B,EAAuCpB,MAAvC,CAA8CmB,IAA9C,EAAoD,KAApD,CAAH,GAAgE,GAAGnB,MAAH,CAAUoB,cAAV,EAA0B,GAA1B,CAAxF;IACA,OAAO,eAAepB,MAAf,CAAsBqB,aAAtB,EAAqC,SAArC,CAAP;EACD;;EAED,IAAIhB,SAAS,KAAKZ,SAAS,CAACqB,KAA5B,EAAmC;IACjC,IAAIQ,KAAK,GAAG1B,YAAY,GAAG,CAAf,GAAmB,MAAMD,KAAN,IAAeC,YAAY,GAAG,CAA9B,CAAnB,GAAsD,CAAlE,CADiC,CACoC;;IAErE,IAAI2B,sBAAsB,GAAG,EAAE5B,KAAK,IAAI,OAAO,IAAIA,KAAX,CAAJ,CAAP,IAAiC,CAACC,YAAY,GAAG,CAAhB,KAAsB,OAAO,IAAID,KAAX,CAAtB,CAA9D;;IAEA,IAAI6B,aAAa,GAAG3B,UAAU,GAAG0B,sBAAH,GAA4BD,KAA1D;;IAEA,IAAIG,eAAe,GAAGvB,aAAa,CAACP,KAAD,EAAQ6B,aAAR,EAAuBpB,YAAvB,EAAqCC,SAArC,EAAgDR,UAAhD,CAAnC;;IAEA,IAAI6B,cAAc,GAAGP,IAAI,GAAG,QAAQnB,MAAR,CAAeyB,eAAf,EAAgC,MAAhC,EAAwCzB,MAAxC,CAA+CmB,IAA/C,EAAqD,KAArD,CAAH,GAAiE,GAAGnB,MAAH,CAAUyB,eAAV,EAA2B,GAA3B,CAA1F;;IAEA,OAAO,eAAezB,MAAf,CAAsB0B,cAAtB,EAAsC,SAAtC,CAAP;EACD;;EAED,IAAIrB,SAAS,KAAKZ,SAAS,CAACiB,MAA5B,EAAoC;IAClC,IAAIiB,MAAM,GAAG/B,YAAY,GAAG,CAAf,GAAmB,MAAMD,KAAN,GAAciC,IAAI,CAACC,KAAL,CAAWjC,YAAY,GAAG,CAA1B,CAAjC,GAAgE,CAA7E;IACA,IAAIkC,eAAe,GAAGlC,YAAY,GAAG,CAAf,KAAqB,CAArB,GAAyB+B,MAAM,GAAG,MAAMhC,KAAN,GAAc,CAAhD,GAAoDgC,MAA1E,CAFkC,CAEgD;;IAElF,IAAII,uBAAuB,GAAG,EAAEpC,KAAK,IAAI,OAAO,IAAIA,KAAX,CAAJ,CAAP,IAAiCiC,IAAI,CAACC,KAAL,CAAWjC,YAAY,GAAG,CAA1B,KAAgC,OAAO,IAAID,KAAX,CAAhC,CAA/D;IACA,IAAIqC,gBAAgB,GAAGpC,YAAY,GAAG,CAAf,KAAqB,CAArB,GAAyBmC,uBAAuB,GAAG,OAAO,IAAIpC,KAAX,IAAoB,CAAvE,GAA2EoC,uBAAlG;;IAEA,IAAIE,cAAc,GAAGpC,UAAU,GAAGmC,gBAAH,GAAsBF,eAArD;;IAEA,IAAII,gBAAgB,GAAGhC,aAAa,CAACP,KAAD,EAAQsC,cAAR,EAAwB7B,YAAxB,EAAsCC,SAAtC,EAAiDR,UAAjD,CAApC;;IAEA,IAAIsC,eAAe,GAAGhB,IAAI,GAAG,QAAQnB,MAAR,CAAekC,gBAAf,EAAiC,MAAjC,EAAyClC,MAAzC,CAAgDmB,IAAhD,EAAsD,KAAtD,CAAH,GAAkE,GAAGnB,MAAH,CAAUkC,gBAAV,EAA4B,GAA5B,CAA5F;;IAEA,OAAO,eAAelC,MAAf,CAAsBmC,eAAtB,EAAuC,SAAvC,CAAP;EACD;;EAED,OAAO,sBAAP;AACD,CAvCD;;AAyCA,OAAO,IAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,QAA7B,EAAuCjC,YAAvC,EAAqDkC,SAArD,EAAgE1C,YAAhE,EAA8ES,SAA9E,EAAyFR,UAAzF,EAAqG0C,KAArG,EAA4GpB,IAA5G,EAAkHqB,cAAlH,EAAkI;EACjK,IAAI7C,KAAK,GAAGH,KAAK,CAACiD,QAAN,CAAe9C,KAAf,CAAqB0C,QAArB,CAAZ;EACA,IAAIK,KAAK,GAAGhD,kBAAkB,CAACC,KAAD,EAAQC,YAAR,EAAsBC,UAAtB,CAA9B;EACA,IAAI8C,WAAW,GAAGzB,cAAc,CAACb,SAAS,IAAIZ,SAAS,CAACa,IAAxB,EAA8BV,YAAY,IAAI,CAA9C,EAAiDD,KAAjD,EAAwDS,YAAxD,EAAsEP,UAAtE,EAAkFsB,IAAlF,CAAhC;EACA,OAAO;IACLuB,KAAK,EAAEA,KADF;IAELE,SAAS,EAAE,MAFN;IAGLC,UAAU,EAAEP,SAAS,IAAIE,cAAc,KAAK,MAAhC,GAAyC,GAAGxC,MAAH,CAAUuC,KAAK,IAAI,GAAnB,EAAwB,YAAxB,CAAzC,GAAiF,MAHxF;IAILO,SAAS,EAAEH,WAJN;IAKLI,OAAO,EAAE;EALJ,CAAP;AAOD,CAXM"},"metadata":{},"sourceType":"module"}